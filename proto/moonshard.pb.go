// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moonshard.proto

package moonshard

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingSetter struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingSetter) Reset()         { *m = PingSetter{} }
func (m *PingSetter) String() string { return proto.CompactTextString(m) }
func (*PingSetter) ProtoMessage()    {}
func (*PingSetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{0}
}

func (m *PingSetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingSetter.Unmarshal(m, b)
}
func (m *PingSetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingSetter.Marshal(b, m, deterministic)
}
func (m *PingSetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingSetter.Merge(m, src)
}
func (m *PingSetter) XXX_Size() int {
	return xxx_messageInfo_PingSetter.Size(m)
}
func (m *PingSetter) XXX_DiscardUnknown() {
	xxx_messageInfo_PingSetter.DiscardUnknown(m)
}

var xxx_messageInfo_PingSetter proto.InternalMessageInfo

func (m *PingSetter) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type Null struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{1}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

func (m *Null) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type LatestVersion struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestVersion) Reset()         { *m = LatestVersion{} }
func (m *LatestVersion) String() string { return proto.CompactTextString(m) }
func (*LatestVersion) ProtoMessage()    {}
func (*LatestVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{2}
}

func (m *LatestVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestVersion.Unmarshal(m, b)
}
func (m *LatestVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestVersion.Marshal(b, m, deterministic)
}
func (m *LatestVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestVersion.Merge(m, src)
}
func (m *LatestVersion) XXX_Size() int {
	return xxx_messageInfo_LatestVersion.Size(m)
}
func (m *LatestVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestVersion.DiscardUnknown(m)
}

var xxx_messageInfo_LatestVersion proto.InternalMessageInfo

func (m *LatestVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *LatestVersion) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Success struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{3}
}

func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (m *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(m, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

func (m *Success) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ObjData struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjData) Reset()         { *m = ObjData{} }
func (m *ObjData) String() string { return proto.CompactTextString(m) }
func (*ObjData) ProtoMessage()    {}
func (*ObjData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{4}
}

func (m *ObjData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjData.Unmarshal(m, b)
}
func (m *ObjData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjData.Marshal(b, m, deterministic)
}
func (m *ObjData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjData.Merge(m, src)
}
func (m *ObjData) XXX_Size() int {
	return xxx_messageInfo_ObjData.Size(m)
}
func (m *ObjData) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjData.DiscardUnknown(m)
}

var xxx_messageInfo_ObjData proto.InternalMessageInfo

func (m *ObjData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ObjGetter struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Obj                  string   `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjGetter) Reset()         { *m = ObjGetter{} }
func (m *ObjGetter) String() string { return proto.CompactTextString(m) }
func (*ObjGetter) ProtoMessage()    {}
func (*ObjGetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{5}
}

func (m *ObjGetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjGetter.Unmarshal(m, b)
}
func (m *ObjGetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjGetter.Marshal(b, m, deterministic)
}
func (m *ObjGetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjGetter.Merge(m, src)
}
func (m *ObjGetter) XXX_Size() int {
	return xxx_messageInfo_ObjGetter.Size(m)
}
func (m *ObjGetter) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjGetter.DiscardUnknown(m)
}

var xxx_messageInfo_ObjGetter proto.InternalMessageInfo

func (m *ObjGetter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjGetter) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

type ObjSetter struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Obj                  string   `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Sign                 string   `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjSetter) Reset()         { *m = ObjSetter{} }
func (m *ObjSetter) String() string { return proto.CompactTextString(m) }
func (*ObjSetter) ProtoMessage()    {}
func (*ObjSetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{6}
}

func (m *ObjSetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjSetter.Unmarshal(m, b)
}
func (m *ObjSetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjSetter.Marshal(b, m, deterministic)
}
func (m *ObjSetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjSetter.Merge(m, src)
}
func (m *ObjSetter) XXX_Size() int {
	return xxx_messageInfo_ObjSetter.Size(m)
}
func (m *ObjSetter) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjSetter.DiscardUnknown(m)
}

var xxx_messageInfo_ObjSetter proto.InternalMessageInfo

func (m *ObjSetter) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *ObjSetter) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *ObjSetter) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *ObjSetter) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type ObjsGetter struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	Obj                  string   `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Prt                  int64    `protobuf:"varint,3,opt,name=prt,proto3" json:"prt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjsGetter) Reset()         { *m = ObjsGetter{} }
func (m *ObjsGetter) String() string { return proto.CompactTextString(m) }
func (*ObjsGetter) ProtoMessage()    {}
func (*ObjsGetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d25e90c82d439084, []int{7}
}

func (m *ObjsGetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjsGetter.Unmarshal(m, b)
}
func (m *ObjsGetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjsGetter.Marshal(b, m, deterministic)
}
func (m *ObjsGetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjsGetter.Merge(m, src)
}
func (m *ObjsGetter) XXX_Size() int {
	return xxx_messageInfo_ObjsGetter.Size(m)
}
func (m *ObjsGetter) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjsGetter.DiscardUnknown(m)
}

var xxx_messageInfo_ObjsGetter proto.InternalMessageInfo

func (m *ObjsGetter) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *ObjsGetter) GetObj() string {
	if m != nil {
		return m.Obj
	}
	return ""
}

func (m *ObjsGetter) GetPrt() int64 {
	if m != nil {
		return m.Prt
	}
	return 0
}

func init() {
	proto.RegisterType((*PingSetter)(nil), "moonshard.PingSetter")
	proto.RegisterType((*Null)(nil), "moonshard.Null")
	proto.RegisterType((*LatestVersion)(nil), "moonshard.LatestVersion")
	proto.RegisterType((*Success)(nil), "moonshard.Success")
	proto.RegisterType((*ObjData)(nil), "moonshard.ObjData")
	proto.RegisterType((*ObjGetter)(nil), "moonshard.ObjGetter")
	proto.RegisterType((*ObjSetter)(nil), "moonshard.ObjSetter")
	proto.RegisterType((*ObjsGetter)(nil), "moonshard.ObjsGetter")
}

func init() { proto.RegisterFile("moonshard.proto", fileDescriptor_d25e90c82d439084) }

var fileDescriptor_d25e90c82d439084 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xdf, 0x4b, 0xeb, 0x30,
	0x18, 0xdd, 0xda, 0xb2, 0xdd, 0x7e, 0x97, 0x7b, 0x57, 0xc2, 0xbd, 0x52, 0x26, 0x8a, 0x44, 0x1f,
	0x7c, 0xb1, 0x88, 0x7b, 0x11, 0x41, 0x84, 0x21, 0x54, 0xf0, 0xc7, 0xc6, 0x06, 0xfa, 0xe4, 0x43,
	0xba, 0x86, 0xad, 0xa5, 0x6b, 0x4a, 0x92, 0xf9, 0xe3, 0xcf, 0xf2, 0x3f, 0x94, 0xa4, 0xe9, 0xb6,
	0x32, 0xb7, 0xb7, 0x93, 0x93, 0x73, 0xce, 0x97, 0x2f, 0xf9, 0x02, 0x9d, 0x39, 0x63, 0xb9, 0x98,
	0x11, 0x1e, 0x07, 0x05, 0x67, 0x92, 0x21, 0x77, 0x49, 0xe0, 0x13, 0x80, 0x61, 0x92, 0x4f, 0xc7,
	0x54, 0x4a, 0xca, 0xd1, 0x1e, 0xb4, 0x8a, 0x45, 0x74, 0x4f, 0x3f, 0xfd, 0xe6, 0x51, 0xf3, 0xd4,
	0x1d, 0x99, 0x15, 0x3e, 0x04, 0xe7, 0x69, 0x91, 0x65, 0x5b, 0xf7, 0xaf, 0xe1, 0xcf, 0x03, 0x91,
	0x54, 0xc8, 0x67, 0xca, 0x45, 0xc2, 0x72, 0xe4, 0x43, 0xfb, 0xad, 0x84, 0x46, 0x59, 0x2d, 0x11,
	0x02, 0xa7, 0x20, 0x72, 0xe6, 0x5b, 0x9a, 0xd6, 0x18, 0x1f, 0x43, 0x7b, 0xbc, 0x98, 0x4c, 0xa8,
	0x10, 0xca, 0x28, 0x4a, 0xa8, 0x8d, 0xbf, 0x46, 0xd5, 0x12, 0x1f, 0x40, 0x7b, 0x10, 0xa5, 0xb7,
	0x44, 0x12, 0x95, 0x11, 0x13, 0x49, 0x4c, 0xb4, 0xc6, 0xf8, 0x0c, 0xdc, 0x41, 0x94, 0x86, 0x65,
	0x1f, 0x7f, 0xc1, 0x4a, 0x62, 0xb3, 0x6d, 0x25, 0x31, 0xf2, 0xc0, 0x66, 0x51, 0x6a, 0x6a, 0x2a,
	0x88, 0x5f, 0xb5, 0x7c, 0x77, 0xdb, 0x9b, 0xb6, 0x65, 0x65, 0x7b, 0x55, 0x59, 0x71, 0x22, 0x99,
	0xe6, 0xbe, 0x53, 0x72, 0x0a, 0xe3, 0x3e, 0xc0, 0x20, 0x4a, 0x85, 0x39, 0x8e, 0x07, 0xb6, 0x90,
	0xdc, 0x84, 0x2b, 0xf8, 0x43, 0xb2, 0x07, 0x76, 0xc1, 0xa5, 0x0e, 0xb6, 0x47, 0x0a, 0x5e, 0x7c,
	0x59, 0xe0, 0x3e, 0x56, 0x0f, 0x85, 0x2e, 0x01, 0xc6, 0x54, 0x56, 0x37, 0xf0, 0x2f, 0x58, 0xbd,
	0xe9, 0xb2, 0x8f, 0x2e, 0x5a, 0x63, 0xcd, 0x85, 0xe2, 0x86, 0x72, 0x86, 0x5b, 0x9d, 0xe1, 0xa6,
	0xd3, 0x28, 0x71, 0x03, 0x5d, 0xc1, 0xef, 0xd2, 0x29, 0xb4, 0xf5, 0x7f, 0x5d, 0x24, 0x76, 0x7a,
	0x7b, 0xe0, 0xa8, 0xc1, 0xaa, 0x99, 0x56, 0x93, 0xb6, 0xe5, 0xa8, 0x37, 0xe0, 0x85, 0x54, 0xd6,
	0x47, 0xa9, 0xb3, 0xa6, 0x54, 0x43, 0xd8, 0xf5, 0xd7, 0x88, 0x9a, 0x14, 0x37, 0xfa, 0xe7, 0xb0,
	0x9f, 0xb0, 0x60, 0xca, 0x8b, 0x49, 0x40, 0x3f, 0xc8, 0xbc, 0xc8, 0xa8, 0x08, 0x66, 0x34, 0xcb,
	0xd8, 0x3b, 0xe3, 0x59, 0xdc, 0xef, 0xdc, 0x29, 0xfc, 0xa2, 0xf0, 0x50, 0xfd, 0x84, 0x61, 0x33,
	0x6a, 0xe9, 0x2f, 0xd1, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xa9, 0x9d, 0xf3, 0x25, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MoonshardClient is the client API for Moonshard service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoonshardClient interface {
	SetObjData(ctx context.Context, in *ObjSetter, opts ...grpc.CallOption) (*Success, error)
	GetObjData(ctx context.Context, in *ObjGetter, opts ...grpc.CallOption) (*ObjData, error)
	GetObjsData(ctx context.Context, in *ObjsGetter, opts ...grpc.CallOption) (*ObjData, error)
	Ping(ctx context.Context, in *PingSetter, opts ...grpc.CallOption) (*Success, error)
	GetLatestVersion(ctx context.Context, in *Null, opts ...grpc.CallOption) (*LatestVersion, error)
}

type moonshardClient struct {
	cc *grpc.ClientConn
}

func NewMoonshardClient(cc *grpc.ClientConn) MoonshardClient {
	return &moonshardClient{cc}
}

func (c *moonshardClient) SetObjData(ctx context.Context, in *ObjSetter, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/moonshard.Moonshard/SetObjData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moonshardClient) GetObjData(ctx context.Context, in *ObjGetter, opts ...grpc.CallOption) (*ObjData, error) {
	out := new(ObjData)
	err := c.cc.Invoke(ctx, "/moonshard.Moonshard/GetObjData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moonshardClient) GetObjsData(ctx context.Context, in *ObjsGetter, opts ...grpc.CallOption) (*ObjData, error) {
	out := new(ObjData)
	err := c.cc.Invoke(ctx, "/moonshard.Moonshard/GetObjsData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moonshardClient) Ping(ctx context.Context, in *PingSetter, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/moonshard.Moonshard/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moonshardClient) GetLatestVersion(ctx context.Context, in *Null, opts ...grpc.CallOption) (*LatestVersion, error) {
	out := new(LatestVersion)
	err := c.cc.Invoke(ctx, "/moonshard.Moonshard/GetLatestVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoonshardServer is the server API for Moonshard service.
type MoonshardServer interface {
	SetObjData(context.Context, *ObjSetter) (*Success, error)
	GetObjData(context.Context, *ObjGetter) (*ObjData, error)
	GetObjsData(context.Context, *ObjsGetter) (*ObjData, error)
	Ping(context.Context, *PingSetter) (*Success, error)
	GetLatestVersion(context.Context, *Null) (*LatestVersion, error)
}

func RegisterMoonshardServer(s *grpc.Server, srv MoonshardServer) {
	s.RegisterService(&_Moonshard_serviceDesc, srv)
}

func _Moonshard_SetObjData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjSetter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoonshardServer).SetObjData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moonshard.Moonshard/SetObjData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoonshardServer).SetObjData(ctx, req.(*ObjSetter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Moonshard_GetObjData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjGetter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoonshardServer).GetObjData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moonshard.Moonshard/GetObjData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoonshardServer).GetObjData(ctx, req.(*ObjGetter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Moonshard_GetObjsData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjsGetter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoonshardServer).GetObjsData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moonshard.Moonshard/GetObjsData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoonshardServer).GetObjsData(ctx, req.(*ObjsGetter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Moonshard_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingSetter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoonshardServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moonshard.Moonshard/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoonshardServer).Ping(ctx, req.(*PingSetter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Moonshard_GetLatestVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoonshardServer).GetLatestVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moonshard.Moonshard/GetLatestVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoonshardServer).GetLatestVersion(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

var _Moonshard_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moonshard.Moonshard",
	HandlerType: (*MoonshardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetObjData",
			Handler:    _Moonshard_SetObjData_Handler,
		},
		{
			MethodName: "GetObjData",
			Handler:    _Moonshard_GetObjData_Handler,
		},
		{
			MethodName: "GetObjsData",
			Handler:    _Moonshard_GetObjsData_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Moonshard_Ping_Handler,
		},
		{
			MethodName: "GetLatestVersion",
			Handler:    _Moonshard_GetLatestVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "moonshard.proto",
}
